{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/apollo/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/apollo/source/css/apollo.css","path":"css/apollo.css","modified":1,"renderable":1},{"_id":"themes/apollo/source/font/sourcesanspro.woff","path":"font/sourcesanspro.woff","modified":1,"renderable":1},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","path":"font/sourcesanspro.woff2","modified":1,"renderable":1},{"_id":"themes/apollo/source/scss/apollo.scss","path":"scss/apollo.scss","modified":1,"renderable":1}],"Cache":[{"_id":"themes/apollo/.gitignore","hash":"a006beea0877a0aa3610ee00e73f62cb1d45125b","modified":1507299562000},{"_id":"themes/apollo/README.md","hash":"c55106ae9c4ad58d60fea5c080e12c8260c00c63","modified":1507299562000},{"_id":"themes/apollo/_config.yml","hash":"96d142e5b728c20e7786b6176cc15b05f73f7a2e","modified":1507299562000},{"_id":"themes/apollo/gulpfile.js","hash":"857a026b6643a2cd52c65d4ae0dc7fe9618206ee","modified":1507299562000},{"_id":"themes/apollo/LICENSE","hash":"6e31ac9076bfc8f09ae47977419eee4edfb63e5b","modified":1507299562000},{"_id":"themes/apollo/package.json","hash":"eb1e76ec0b7ed6c6c7b2bd32b4f1e1bbe15800ca","modified":1507299562000},{"_id":"source/.DS_Store","hash":"cc75fbdb977a72e3c33a32b977ec965c1597d5c5","modified":1497692073000},{"_id":"themes/apollo/.git/FETCH_HEAD","hash":"81404fc0d624cbc734443cf852a17a1794fe7ec3","modified":1507299747000},{"_id":"themes/apollo/.git/config","hash":"1268e8035cc6bf681d0e7683f1c22974073f6268","modified":1507299562000},{"_id":"themes/apollo/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1507299562000},{"_id":"themes/apollo/.git/ORIG_HEAD","hash":"4203b4d3ea6c5c442f89dee20f23c0b7bb147dfb","modified":1507299747000},{"_id":"themes/apollo/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1507299544000},{"_id":"themes/apollo/.git/index","hash":"469e2e9fbc0987a4b9790af1f644856406e83340","modified":1507299747000},{"_id":"themes/apollo/.git/packed-refs","hash":"7a5cc192efd0430acfda058ce8da151395349bb7","modified":1507299562000},{"_id":"themes/apollo/doc/doc-en.md","hash":"409e931a444c02a57b64a0a44dde6e66c1881ca0","modified":1507299562000},{"_id":"themes/apollo/doc/doc-zh.md","hash":"2a6a81840cdaf497969268a12d8f62c98cc38103","modified":1507299562000},{"_id":"themes/apollo/languages/en.yml","hash":"40292f2a48e4e6361132033a47c516cb33127b6c","modified":1507299562000},{"_id":"themes/apollo/languages/zh-cn.yml","hash":"9e4b03e14c094000257ea254fd660dde4c7af63c","modified":1507299562000},{"_id":"themes/apollo/layout/archive.jade","hash":"62797414355bf4474092bc3a32726c8340820ffb","modified":1507299562000},{"_id":"themes/apollo/layout/index.jade","hash":"55f2f1b4b5364a0e09cb18e1112664c6415fb881","modified":1507299562000},{"_id":"themes/apollo/layout/post.jade","hash":"245c26244c075c3632d1545c3b228ee9d112f15d","modified":1507299562000},{"_id":"themes/apollo/source/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1507299562000},{"_id":"source/_posts/.DS_Store","hash":"141acfaaa9c028348872f759ff8b361fb22e5ece","modified":1497692078000},{"_id":"source/_posts/2014-09-10-java8-study.md","hash":"91ddafffea93223d6c80b7579b91e35f8abd0f24","modified":1440221181000},{"_id":"source/_posts/2015-08-22-big-two-scoring.md","hash":"3c87fb04a68cc94f261496f8001c2ef969a0f99c","modified":1440225521000},{"_id":"source/_posts/2015-08-23-css-implement-mobile-layout.md","hash":"40b35acecdfb4b0d5c56a31acf7a83ed6e0eddd6","modified":1440322255000},{"_id":"source/_posts/2015-08-30-function-return-string-in-shell.md","hash":"7883a275b768811ea776c5619d4d91547e9aa320","modified":1440943204000},{"_id":"source/_posts_hide/2014-09-07-movie-yishengyishi.md","hash":"6a418bb58bb9b8a51fb6f464aef995780f67a5f8","modified":1492001405000},{"_id":"source/_posts_hide/2017-06-17-docker-frequently-used-command.md","hash":"0290a425284489f38315d17d00b81a4b38c4197c","modified":1499056661000},{"_id":"source/_posts_hide/2017-07-02-go-through-tutorial-of-weex.md","hash":"7ccf7b3e332ddcfcae8d512d6ba26454fb4ac97e","modified":1498982971000},{"_id":"source/tags/index.md","hash":"e644d1135d0b4aaecd2baaddc5180fc88a31d206","modified":1439483703000},{"_id":"themes/apollo/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1507299544000},{"_id":"themes/apollo/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1507299544000},{"_id":"themes/apollo/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1507299544000},{"_id":"themes/apollo/.git/logs/HEAD","hash":"f0be5af91d249708ed37297e46a947335721e5ce","modified":1507299747000},{"_id":"themes/apollo/layout/mixins/paginator.jade","hash":"f4ee2fb61a32e199b48cf93771749edc8a007391","modified":1507299562000},{"_id":"themes/apollo/layout/mixins/post.jade","hash":"d062bd55f790fb0a9c02569dbbe526cde020b301","modified":1507299562000},{"_id":"themes/apollo/layout/partial/comment.jade","hash":"ff0a2c269c2434da2ac5529872f1d6184a71f96d","modified":1507299562000},{"_id":"themes/apollo/layout/partial/copyright.jade","hash":"217f8b17054e5079f2d30bb7e2e4e36c0f2161b7","modified":1507299562000},{"_id":"themes/apollo/layout/partial/head.jade","hash":"43d2db73f0247a9a3ed00ecb95b537a872b7201a","modified":1507299562000},{"_id":"themes/apollo/layout/partial/layout.jade","hash":"529c2ec06cfbc3d5b6d66dd320db50dfab5577a6","modified":1507299562000},{"_id":"themes/apollo/layout/partial/nav.jade","hash":"f4842d9d3d763fbb823d112a6f49f24cc42a0ad4","modified":1507299562000},{"_id":"themes/apollo/layout/partial/scripts.jade","hash":"6bff591ae3d1ff6750f239c4c933ad61f009f36a","modified":1507299562000},{"_id":"themes/apollo/source/css/apollo.css","hash":"2b2ddbd3155e79a83da7d5dab219c58444fe2e38","modified":1507299747000},{"_id":"themes/apollo/source/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1507299562000},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1507299562000},{"_id":"themes/apollo/source/scss/apollo.scss","hash":"e0092f469264b55b25e0d441274f1c812147e7d1","modified":1507299562000},{"_id":"source/_posts/2015-08-22-big-two-scoring/app_1.png","hash":"552d730e9b873212d42ef71ae0cae80b325cd369","modified":1440218298000},{"_id":"source/_posts/2015-08-22-big-two-scoring/app_2.png","hash":"f7bfa92276701a8244555e53e8491e2ee781916a","modified":1440218332000},{"_id":"source/_posts_hide/2014-09-07-movie-yishengyishi/yishengyishi.jpg","hash":"7b12295d25f29fc56f02abcddfa6b4ddf12bc935","modified":1439483703000},{"_id":"themes/apollo/.git/objects/7a/48e39eaf3e9f1892303b768ec8eaddb88d8689","hash":"ca41d4001b0046329a0a74ccfd1d23533b080691","modified":1507299747000},{"_id":"themes/apollo/.git/objects/00/f2ca91b602db16f760d71bcca9e988d24a0f52","hash":"7b276e9e3e8c3376064be6c3e55306510c04b8b6","modified":1507299747000},{"_id":"themes/apollo/.git/objects/da/829b20d051e6c40b3e3624d64108d1a3c50b38","hash":"c3b22c2ea5f98e935e40d458aba3cd4357e35c64","modified":1507299747000},{"_id":"themes/apollo/.git/objects/3e/a6466d4cb5018ae9d6e52d2a556cad05fc960b","hash":"df14fb8c6a2f72fbed0186a62d1647e8ab84f5bd","modified":1507299747000},{"_id":"themes/apollo/.git/objects/f8/0b9dea90a88d3ded3e6024b7975337f3345a8f","hash":"343a032f0cf695f0d75a1d2c2187df0277fccdbb","modified":1507299747000},{"_id":"themes/apollo/.git/objects/pack/pack-f0cf832f40e533f96b1f5870dab98b509aec1bf6.idx","hash":"f89e1fc40604f0725b44bf0badf6c3ade3388c94","modified":1507299562000},{"_id":"themes/apollo/.git/refs/heads/master","hash":"f3b292c8727b775aebdfc3e160cd0a15a2bb455b","modified":1507299747000},{"_id":"themes/apollo/source/scss/_partial/archive-post-list.scss","hash":"d2f740a7d48349b7536777c795f82ab740836d0f","modified":1507299562000},{"_id":"themes/apollo/source/scss/_partial/base.scss","hash":"ae967b2049ecb9b8c4e139ecce32fd9fb5358ac5","modified":1507299562000},{"_id":"themes/apollo/source/scss/_partial/copyright.scss","hash":"1309667e3000037170cfbb5b8c9c65f4ffcf6814","modified":1507299562000},{"_id":"themes/apollo/source/scss/_partial/footer.scss","hash":"094aca6e52f11b139ac7980ca03fa7b9d8fc7b2f","modified":1507299562000},{"_id":"themes/apollo/source/scss/_partial/header.scss","hash":"867eaa7f4cf66126a5f02ae4fc47d91ab2aa0df0","modified":1507299562000},{"_id":"themes/apollo/source/scss/_partial/home-post-list.scss","hash":"6b5c59f3d2295944f934aee2c1156012a3306d5d","modified":1507299562000},{"_id":"themes/apollo/source/scss/_partial/mq.scss","hash":"fc5dda52cfbb10e27e2471e03f4606fb3d588225","modified":1507299562000},{"_id":"themes/apollo/source/scss/_partial/normalize.scss","hash":"fd0b27bed6f103ea95b08f698ea663ff576dbcf1","modified":1507299562000},{"_id":"themes/apollo/source/scss/_partial/post.scss","hash":"1998f207541a2590a5624549f96c5e65d136690a","modified":1507299562000},{"_id":"themes/apollo/.git/logs/refs/heads/master","hash":"f0be5af91d249708ed37297e46a947335721e5ce","modified":1507299747000},{"_id":"themes/apollo/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1507299562000},{"_id":"themes/apollo/.git/refs/remotes/origin/master","hash":"f3b292c8727b775aebdfc3e160cd0a15a2bb455b","modified":1507299747000},{"_id":"themes/apollo/.git/logs/refs/remotes/origin/HEAD","hash":"d108f52bbbefcb79062dc9f05b87e67de2a6a1aa","modified":1507299562000},{"_id":"themes/apollo/.git/logs/refs/remotes/origin/master","hash":"c2aab941755ce10c51e5e8820a72934774ac63c0","modified":1507299747000},{"_id":"themes/apollo/.git/objects/pack/pack-f0cf832f40e533f96b1f5870dab98b509aec1bf6.pack","hash":"8f0d142d623866eb68f78d1c2b5e935605362f3d","modified":1507299562000},{"_id":"public/tags/index.html","hash":"39ece1826fffed27bc70b31adf4b8293a6ca048c","modified":1507300167585},{"_id":"public/2015/08/30/function-return-string-in-shell/index.html","hash":"0478932c188168cf4ddf54c44dee83f7bcbb06bb","modified":1507300167585},{"_id":"public/2015/08/23/css-implement-mobile-layout/index.html","hash":"cac948e4c24315941d40ff67890fd342301edfa9","modified":1507300167585},{"_id":"public/2015/08/22/big-two-scoring/index.html","hash":"e001920d568e7dabdd97706399167be741799609","modified":1507300167585},{"_id":"public/2014/09/10/java8-study/index.html","hash":"1997634164665e19c3e149461ad0ef92a69ce9ae","modified":1507300167585},{"_id":"public/archives/index.html","hash":"4925926674acb6638882bc0a6375c52f50718d9a","modified":1507300167585},{"_id":"public/tags/java/index.html","hash":"cda5d1e80f647e57d056f32d0c2fd97ce4248f95","modified":1507300167585},{"_id":"public/tags/css/index.html","hash":"f4bcf74a75985973660943989cb5d493e33bce32","modified":1507300167586},{"_id":"public/tags/mobile/index.html","hash":"ebc834903bd26084f510b63cc5c40188cd058218","modified":1507300167586},{"_id":"public/tags/html5/index.html","hash":"d295bde4a8c0424baa54815d85b2d4bc383c719b","modified":1507300167586},{"_id":"public/tags/angular/index.html","hash":"d295bde4a8c0424baa54815d85b2d4bc383c719b","modified":1507300167586},{"_id":"public/tags/shell/index.html","hash":"69330fb039c36aaacecf319fd4305ca13ac5b16e","modified":1507300167586},{"_id":"public/atom.xml","hash":"2b72fa5b681bec9243feaf77af5864fc7aefb44e","modified":1507300167586},{"_id":"public/sitemap.xml","hash":"87495b20c5ede8d3bfb7ab456ce24441746eff97","modified":1507300167586},{"_id":"public/index.html","hash":"aae2e7847857d054164c17619a369f13b998474f","modified":1507300167586},{"_id":"public/2015/08/22/big-two-scoring/app_1.png","hash":"552d730e9b873212d42ef71ae0cae80b325cd369","modified":1507300167588},{"_id":"public/2015/08/22/big-two-scoring/app_2.png","hash":"f7bfa92276701a8244555e53e8491e2ee781916a","modified":1507300167588},{"_id":"public/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1507300167588},{"_id":"public/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1507300167588},{"_id":"public/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1507300167588},{"_id":"public/css/apollo.css","hash":"2b2ddbd3155e79a83da7d5dab219c58444fe2e38","modified":1507300167604},{"_id":"public/scss/apollo.css","hash":"12a882acce78ed2d6710878ed42fd6c80f23bf95","modified":1507300167696}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2015-08-13T15:28:54.000Z","type":"tags","comments":0,"_content":"ll\n","source":"tags/index.md","raw":"title: tags\ndate: 2015-08-13 23:28:54\ntype: \"tags\"\ncomments: false\n---\nll\n","updated":"2015-08-13T16:35:03.000Z","path":"tags/index.html","layout":"page","_id":"cj8fzloc60001vm1vpyi4hupi","content":"<p>ll</p>\n","site":{"data":{}},"excerpt":"","more":"<p>ll</p>\n"}],"Post":[{"title":"Java 8 Study","date":"2014-09-10T12:46:25.000Z","_content":"\n## Overview of Java 8\n\n\nJava 8 include several important update which make programer's life much more easier. in include\n\n* Lambda expressions \n* Default methods \n* Aggregate operations \n* Date-Time APIs\n* Type annotations \n\nAnd other area says **Security**, **Permission**, **JDBC** stuff, but we will not cover them here. Please read to [official doc](http://docs.oracle.com/javase/tutorial/index.html) to get more detail.\n\n### Download\n\n1. download [jdk 1.8](http://www.oracle.com/technetwork/java/javase/downloads/index.html) \n\n2. To have a good start, I recommend you to download the java 8 [tutorial](http://www.oracle.com/technetwork/java/javase/java-tutorial-downloads-2005894.html). There are a couple of code example under the java folder\n\n3. For IDE, strongly recommend [InteliJ](http://www.jetbrains.com/idea/), version 13.1 can support java 8\n\n### Reference\n\n\n* [Java 8 Features – The ULTIMATE Guide](http://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html)\n\n* I create a study project on [github](https://github.com/jaylu/java8study) , it \n\t* has maven set up for compiling with java 1.8. \n\t* some of the examples from jdk\n\t* some of the examples from the reference doc above\n\n\n## Content\n\n### Lambda expression\n\n[official doc](http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html)\n\n* From previous java version, we can achieve that by passing a **Command Object** to achieve passing 'how to do' to a function. \n\n* The Lambda can simplify it, but it some kind break the strong type restriction in the java. Previously we have to define a command object, but for now we don't. It require us have a better understanding on Lambda expression otherwise the code will drop into a situation which very hard to maintain. \n\n* [Method references](http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html) make the Lambda expressions more readable.\n\n* remember below @FunctionalInterface when declaring your Lambda API would be good\n\t\n\t* Predicate<T> : boolean test(T t); Represents a predicate (boolean-valued function) of one argument.\n\t\n\t* Supplier<T> : T get(); Represents a supplier of results.\n\t\n\t* Consumer<T> : void accept(T t); Represents an operation that accepts a single input argument and returns no result.\n\t\n\t* BiConsumer<T, U> : void accept(T t, U u);Represents an operation that accepts two input arguments and returns no result.\n\n\t* Function<T, R>: R apply(T t); Represents a function that accepts one argument and produces a result.\n\t\n\t* BiFunction<T, U, R> : R apply(T t, U u); Represents a function that accepts two arguments and produces a result.\n\t\n\t* UnaryOperator<T> : extends Function<T, T>; Represents an operation on a single operand that produces a result of the same type as its operand.\n\t\n\n\n### Default methods\n\n[official doc](http://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html)\n\n* Keyword: **interface default static**\n\n* Default method is quite straight forward, it's about defining the default implementation in the interface.\n\n* One of the good example usage for that is the extend the existing interface with default method. Comparator is a good example, it add reversed(), thenComparing() method with the **default** keyword, moreover, you may have interest to have a look how it use the **static** keyword (says 1. provide shortcut to Collections, 2. accept FunctionInterface as parameter). \n\n### Aggregate Operations\n\n[official doc](http://docs.oracle.com/javase/tutorial/collections/streams/index.html)\n\n* Below example can tell about for the new collection usage. \n\n\t``` java\n\tdouble average = roster    \n    .stream()    \n    .filter(p -> p.getGender() == Person.Sex.MALE)    \n    .mapToInt(Person::getAge)    \n    .average()    \n    .getAsDouble();  \n    ```\n\n  \n    \n* [map reduce support](http://docs.oracle.com/javase/tutorial/collections/streams/reduction.html)\n\n* [Parallelism](http://docs.oracle.com/javase/tutorial/collections/streams/parallelism.html) and [Fork/Join](http://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html)\n\n\n### Date Time API\n\n* Clock\n\t\n\tBest practice for applications is to pass a Clock into any method that requires the current instant. A dependency injection framework is one way to achieve this. This approach allows an alternate clock, such as **fixed** or **offset** to be used during testing.\n\t\n\t``` java\n    public class MyBean {\n      private Clock clock;  // dependency inject\n      ...\n      public void process(LocalDate eventDate) {\n        if (eventDate.isBefore(LocalDate.now(clock)) {\n          ...\n        }\n      }\n    }\n\t```\n\n\n\n\t\n\t\n* LocalDate, LocalTime, LocalDateTime, ZonedDateTime\n\n* Duration\n\n### Type Annotations\n\n* repeating annotation\n","source":"_posts/2014-09-10-java8-study.md","raw":"---\ntitle: \"Java 8 Study\"\ndate: 2014/9/10 20:46:25\ntags: [java]\n---\n\n## Overview of Java 8\n\n\nJava 8 include several important update which make programer's life much more easier. in include\n\n* Lambda expressions \n* Default methods \n* Aggregate operations \n* Date-Time APIs\n* Type annotations \n\nAnd other area says **Security**, **Permission**, **JDBC** stuff, but we will not cover them here. Please read to [official doc](http://docs.oracle.com/javase/tutorial/index.html) to get more detail.\n\n### Download\n\n1. download [jdk 1.8](http://www.oracle.com/technetwork/java/javase/downloads/index.html) \n\n2. To have a good start, I recommend you to download the java 8 [tutorial](http://www.oracle.com/technetwork/java/javase/java-tutorial-downloads-2005894.html). There are a couple of code example under the java folder\n\n3. For IDE, strongly recommend [InteliJ](http://www.jetbrains.com/idea/), version 13.1 can support java 8\n\n### Reference\n\n\n* [Java 8 Features – The ULTIMATE Guide](http://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html)\n\n* I create a study project on [github](https://github.com/jaylu/java8study) , it \n\t* has maven set up for compiling with java 1.8. \n\t* some of the examples from jdk\n\t* some of the examples from the reference doc above\n\n\n## Content\n\n### Lambda expression\n\n[official doc](http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html)\n\n* From previous java version, we can achieve that by passing a **Command Object** to achieve passing 'how to do' to a function. \n\n* The Lambda can simplify it, but it some kind break the strong type restriction in the java. Previously we have to define a command object, but for now we don't. It require us have a better understanding on Lambda expression otherwise the code will drop into a situation which very hard to maintain. \n\n* [Method references](http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html) make the Lambda expressions more readable.\n\n* remember below @FunctionalInterface when declaring your Lambda API would be good\n\t\n\t* Predicate<T> : boolean test(T t); Represents a predicate (boolean-valued function) of one argument.\n\t\n\t* Supplier<T> : T get(); Represents a supplier of results.\n\t\n\t* Consumer<T> : void accept(T t); Represents an operation that accepts a single input argument and returns no result.\n\t\n\t* BiConsumer<T, U> : void accept(T t, U u);Represents an operation that accepts two input arguments and returns no result.\n\n\t* Function<T, R>: R apply(T t); Represents a function that accepts one argument and produces a result.\n\t\n\t* BiFunction<T, U, R> : R apply(T t, U u); Represents a function that accepts two arguments and produces a result.\n\t\n\t* UnaryOperator<T> : extends Function<T, T>; Represents an operation on a single operand that produces a result of the same type as its operand.\n\t\n\n\n### Default methods\n\n[official doc](http://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html)\n\n* Keyword: **interface default static**\n\n* Default method is quite straight forward, it's about defining the default implementation in the interface.\n\n* One of the good example usage for that is the extend the existing interface with default method. Comparator is a good example, it add reversed(), thenComparing() method with the **default** keyword, moreover, you may have interest to have a look how it use the **static** keyword (says 1. provide shortcut to Collections, 2. accept FunctionInterface as parameter). \n\n### Aggregate Operations\n\n[official doc](http://docs.oracle.com/javase/tutorial/collections/streams/index.html)\n\n* Below example can tell about for the new collection usage. \n\n\t``` java\n\tdouble average = roster    \n    .stream()    \n    .filter(p -> p.getGender() == Person.Sex.MALE)    \n    .mapToInt(Person::getAge)    \n    .average()    \n    .getAsDouble();  \n    ```\n\n  \n    \n* [map reduce support](http://docs.oracle.com/javase/tutorial/collections/streams/reduction.html)\n\n* [Parallelism](http://docs.oracle.com/javase/tutorial/collections/streams/parallelism.html) and [Fork/Join](http://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html)\n\n\n### Date Time API\n\n* Clock\n\t\n\tBest practice for applications is to pass a Clock into any method that requires the current instant. A dependency injection framework is one way to achieve this. This approach allows an alternate clock, such as **fixed** or **offset** to be used during testing.\n\t\n\t``` java\n    public class MyBean {\n      private Clock clock;  // dependency inject\n      ...\n      public void process(LocalDate eventDate) {\n        if (eventDate.isBefore(LocalDate.now(clock)) {\n          ...\n        }\n      }\n    }\n\t```\n\n\n\n\t\n\t\n* LocalDate, LocalTime, LocalDateTime, ZonedDateTime\n\n* Duration\n\n### Type Annotations\n\n* repeating annotation\n","slug":"java8-study","published":1,"updated":"2015-08-22T05:26:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8fzloc00000vm1vp3od15ol","content":"<h2 id=\"Overview-of-Java-8\"><a href=\"#Overview-of-Java-8\" class=\"headerlink\" title=\"Overview of Java 8\"></a>Overview of Java 8</h2><p>Java 8 include several important update which make programer’s life much more easier. in include</p>\n<ul>\n<li>Lambda expressions </li>\n<li>Default methods </li>\n<li>Aggregate operations </li>\n<li>Date-Time APIs</li>\n<li>Type annotations </li>\n</ul>\n<p>And other area says <strong>Security</strong>, <strong>Permission</strong>, <strong>JDBC</strong> stuff, but we will not cover them here. Please read to <a href=\"http://docs.oracle.com/javase/tutorial/index.html\" target=\"_blank\" rel=\"external\">official doc</a> to get more detail.</p>\n<h3 id=\"Download\"><a href=\"#Download\" class=\"headerlink\" title=\"Download\"></a>Download</h3><ol>\n<li><p>download <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"external\">jdk 1.8</a> </p>\n</li>\n<li><p>To have a good start, I recommend you to download the java 8 <a href=\"http://www.oracle.com/technetwork/java/javase/java-tutorial-downloads-2005894.html\" target=\"_blank\" rel=\"external\">tutorial</a>. There are a couple of code example under the java folder</p>\n</li>\n<li><p>For IDE, strongly recommend <a href=\"http://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"external\">InteliJ</a>, version 13.1 can support java 8</p>\n</li>\n</ol>\n<h3 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h3><ul>\n<li><p><a href=\"http://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html\" target=\"_blank\" rel=\"external\">Java 8 Features – The ULTIMATE Guide</a></p>\n</li>\n<li><p>I create a study project on <a href=\"https://github.com/jaylu/java8study\" target=\"_blank\" rel=\"external\">github</a> , it </p>\n<ul>\n<li>has maven set up for compiling with java 1.8. </li>\n<li>some of the examples from jdk</li>\n<li>some of the examples from the reference doc above</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Content\"><a href=\"#Content\" class=\"headerlink\" title=\"Content\"></a>Content</h2><h3 id=\"Lambda-expression\"><a href=\"#Lambda-expression\" class=\"headerlink\" title=\"Lambda expression\"></a>Lambda expression</h3><p><a href=\"http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html\" target=\"_blank\" rel=\"external\">official doc</a></p>\n<ul>\n<li><p>From previous java version, we can achieve that by passing a <strong>Command Object</strong> to achieve passing ‘how to do’ to a function. </p>\n</li>\n<li><p>The Lambda can simplify it, but it some kind break the strong type restriction in the java. Previously we have to define a command object, but for now we don’t. It require us have a better understanding on Lambda expression otherwise the code will drop into a situation which very hard to maintain. </p>\n</li>\n<li><p><a href=\"http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html\" target=\"_blank\" rel=\"external\">Method references</a> make the Lambda expressions more readable.</p>\n</li>\n<li><p>remember below @FunctionalInterface when declaring your Lambda API would be good</p>\n<ul>\n<li><p>Predicate<t> : boolean test(T t); Represents a predicate (boolean-valued function) of one argument.</t></p>\n</li>\n<li><p>Supplier<t> : T get(); Represents a supplier of results.</t></p>\n</li>\n<li><p>Consumer<t> : void accept(T t); Represents an operation that accepts a single input argument and returns no result.</t></p>\n</li>\n<li><p>BiConsumer<t, u=\"\"> : void accept(T t, U u);Represents an operation that accepts two input arguments and returns no result.</t,></p>\n</li>\n<li><p>Function<t, r=\"\">: R apply(T t); Represents a function that accepts one argument and produces a result.</t,></p>\n</li>\n<li><p>BiFunction<t, u,=\"\" r=\"\"> : R apply(T t, U u); Represents a function that accepts two arguments and produces a result.</t,></p>\n</li>\n<li><p>UnaryOperator<t> : extends Function<t, t=\"\">; Represents an operation on a single operand that produces a result of the same type as its operand.</t,></t></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Default-methods\"><a href=\"#Default-methods\" class=\"headerlink\" title=\"Default methods\"></a>Default methods</h3><p><a href=\"http://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html\" target=\"_blank\" rel=\"external\">official doc</a></p>\n<ul>\n<li><p>Keyword: <strong>interface default static</strong></p>\n</li>\n<li><p>Default method is quite straight forward, it’s about defining the default implementation in the interface.</p>\n</li>\n<li><p>One of the good example usage for that is the extend the existing interface with default method. Comparator is a good example, it add reversed(), thenComparing() method with the <strong>default</strong> keyword, moreover, you may have interest to have a look how it use the <strong>static</strong> keyword (says 1. provide shortcut to Collections, 2. accept FunctionInterface as parameter). </p>\n</li>\n</ul>\n<h3 id=\"Aggregate-Operations\"><a href=\"#Aggregate-Operations\" class=\"headerlink\" title=\"Aggregate Operations\"></a>Aggregate Operations</h3><p><a href=\"http://docs.oracle.com/javase/tutorial/collections/streams/index.html\" target=\"_blank\" rel=\"external\">official doc</a></p>\n<ul>\n<li><p>Below example can tell about for the new collection usage. </p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">double</span> average = roster    </div><div class=\"line\">   .stream()    </div><div class=\"line\">   .filter(p -&gt; p.getGender() == Person.Sex.MALE)    </div><div class=\"line\">   .mapToInt(Person::getAge)    </div><div class=\"line\">   .average()    </div><div class=\"line\">   .getAsDouble();</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p><a href=\"http://docs.oracle.com/javase/tutorial/collections/streams/reduction.html\" target=\"_blank\" rel=\"external\">map reduce support</a></p>\n</li>\n<li><p><a href=\"http://docs.oracle.com/javase/tutorial/collections/streams/parallelism.html\" target=\"_blank\" rel=\"external\">Parallelism</a> and <a href=\"http://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html\" target=\"_blank\" rel=\"external\">Fork/Join</a></p>\n</li>\n</ul>\n<h3 id=\"Date-Time-API\"><a href=\"#Date-Time-API\" class=\"headerlink\" title=\"Date Time API\"></a>Date Time API</h3><ul>\n<li><p>Clock</p>\n<p>  Best practice for applications is to pass a Clock into any method that requires the current instant. A dependency injection framework is one way to achieve this. This approach allows an alternate clock, such as <strong>fixed</strong> or <strong>offset</strong> to be used during testing.</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyBean</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> Clock clock;  <span class=\"comment\">// dependency inject</span></div><div class=\"line\">  ...</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">process</span><span class=\"params\">(LocalDate eventDate)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (eventDate.isBefore(LocalDate.now(clock)) &#123;</div><div class=\"line\">      ...</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>LocalDate, LocalTime, LocalDateTime, ZonedDateTime</p>\n</li>\n<li><p>Duration</p>\n</li>\n</ul>\n<h3 id=\"Type-Annotations\"><a href=\"#Type-Annotations\" class=\"headerlink\" title=\"Type Annotations\"></a>Type Annotations</h3><ul>\n<li>repeating annotation</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Overview-of-Java-8\"><a href=\"#Overview-of-Java-8\" class=\"headerlink\" title=\"Overview of Java 8\"></a>Overview of Java 8</h2><p>Java 8 include several important update which make programer’s life much more easier. in include</p>\n<ul>\n<li>Lambda expressions </li>\n<li>Default methods </li>\n<li>Aggregate operations </li>\n<li>Date-Time APIs</li>\n<li>Type annotations </li>\n</ul>\n<p>And other area says <strong>Security</strong>, <strong>Permission</strong>, <strong>JDBC</strong> stuff, but we will not cover them here. Please read to <a href=\"http://docs.oracle.com/javase/tutorial/index.html\" target=\"_blank\" rel=\"external\">official doc</a> to get more detail.</p>\n<h3 id=\"Download\"><a href=\"#Download\" class=\"headerlink\" title=\"Download\"></a>Download</h3><ol>\n<li><p>download <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"external\">jdk 1.8</a> </p>\n</li>\n<li><p>To have a good start, I recommend you to download the java 8 <a href=\"http://www.oracle.com/technetwork/java/javase/java-tutorial-downloads-2005894.html\" target=\"_blank\" rel=\"external\">tutorial</a>. There are a couple of code example under the java folder</p>\n</li>\n<li><p>For IDE, strongly recommend <a href=\"http://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"external\">InteliJ</a>, version 13.1 can support java 8</p>\n</li>\n</ol>\n<h3 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h3><ul>\n<li><p><a href=\"http://www.javacodegeeks.com/2014/05/java-8-features-tutorial.html\" target=\"_blank\" rel=\"external\">Java 8 Features – The ULTIMATE Guide</a></p>\n</li>\n<li><p>I create a study project on <a href=\"https://github.com/jaylu/java8study\" target=\"_blank\" rel=\"external\">github</a> , it </p>\n<ul>\n<li>has maven set up for compiling with java 1.8. </li>\n<li>some of the examples from jdk</li>\n<li>some of the examples from the reference doc above</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Content\"><a href=\"#Content\" class=\"headerlink\" title=\"Content\"></a>Content</h2><h3 id=\"Lambda-expression\"><a href=\"#Lambda-expression\" class=\"headerlink\" title=\"Lambda expression\"></a>Lambda expression</h3><p><a href=\"http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html\" target=\"_blank\" rel=\"external\">official doc</a></p>\n<ul>\n<li><p>From previous java version, we can achieve that by passing a <strong>Command Object</strong> to achieve passing ‘how to do’ to a function. </p>\n</li>\n<li><p>The Lambda can simplify it, but it some kind break the strong type restriction in the java. Previously we have to define a command object, but for now we don’t. It require us have a better understanding on Lambda expression otherwise the code will drop into a situation which very hard to maintain. </p>\n</li>\n<li><p><a href=\"http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html\" target=\"_blank\" rel=\"external\">Method references</a> make the Lambda expressions more readable.</p>\n</li>\n<li><p>remember below @FunctionalInterface when declaring your Lambda API would be good</p>\n<ul>\n<li><p>Predicate<t> : boolean test(T t); Represents a predicate (boolean-valued function) of one argument.</t></p>\n</li>\n<li><p>Supplier<t> : T get(); Represents a supplier of results.</t></p>\n</li>\n<li><p>Consumer<t> : void accept(T t); Represents an operation that accepts a single input argument and returns no result.</t></p>\n</li>\n<li><p>BiConsumer<t, u=\"\"> : void accept(T t, U u);Represents an operation that accepts two input arguments and returns no result.</t,></p>\n</li>\n<li><p>Function<t, r=\"\">: R apply(T t); Represents a function that accepts one argument and produces a result.</t,></p>\n</li>\n<li><p>BiFunction<t, u,=\"\" r=\"\"> : R apply(T t, U u); Represents a function that accepts two arguments and produces a result.</t,></p>\n</li>\n<li><p>UnaryOperator<t> : extends Function<t, t=\"\">; Represents an operation on a single operand that produces a result of the same type as its operand.</t,></t></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Default-methods\"><a href=\"#Default-methods\" class=\"headerlink\" title=\"Default methods\"></a>Default methods</h3><p><a href=\"http://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html\" target=\"_blank\" rel=\"external\">official doc</a></p>\n<ul>\n<li><p>Keyword: <strong>interface default static</strong></p>\n</li>\n<li><p>Default method is quite straight forward, it’s about defining the default implementation in the interface.</p>\n</li>\n<li><p>One of the good example usage for that is the extend the existing interface with default method. Comparator is a good example, it add reversed(), thenComparing() method with the <strong>default</strong> keyword, moreover, you may have interest to have a look how it use the <strong>static</strong> keyword (says 1. provide shortcut to Collections, 2. accept FunctionInterface as parameter). </p>\n</li>\n</ul>\n<h3 id=\"Aggregate-Operations\"><a href=\"#Aggregate-Operations\" class=\"headerlink\" title=\"Aggregate Operations\"></a>Aggregate Operations</h3><p><a href=\"http://docs.oracle.com/javase/tutorial/collections/streams/index.html\" target=\"_blank\" rel=\"external\">official doc</a></p>\n<ul>\n<li><p>Below example can tell about for the new collection usage. </p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">double</span> average = roster    </div><div class=\"line\">   .stream()    </div><div class=\"line\">   .filter(p -&gt; p.getGender() == Person.Sex.MALE)    </div><div class=\"line\">   .mapToInt(Person::getAge)    </div><div class=\"line\">   .average()    </div><div class=\"line\">   .getAsDouble();</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p><a href=\"http://docs.oracle.com/javase/tutorial/collections/streams/reduction.html\" target=\"_blank\" rel=\"external\">map reduce support</a></p>\n</li>\n<li><p><a href=\"http://docs.oracle.com/javase/tutorial/collections/streams/parallelism.html\" target=\"_blank\" rel=\"external\">Parallelism</a> and <a href=\"http://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html\" target=\"_blank\" rel=\"external\">Fork/Join</a></p>\n</li>\n</ul>\n<h3 id=\"Date-Time-API\"><a href=\"#Date-Time-API\" class=\"headerlink\" title=\"Date Time API\"></a>Date Time API</h3><ul>\n<li><p>Clock</p>\n<p>  Best practice for applications is to pass a Clock into any method that requires the current instant. A dependency injection framework is one way to achieve this. This approach allows an alternate clock, such as <strong>fixed</strong> or <strong>offset</strong> to be used during testing.</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyBean</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> Clock clock;  <span class=\"comment\">// dependency inject</span></div><div class=\"line\">  ...</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">process</span><span class=\"params\">(LocalDate eventDate)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (eventDate.isBefore(LocalDate.now(clock)) &#123;</div><div class=\"line\">      ...</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>LocalDate, LocalTime, LocalDateTime, ZonedDateTime</p>\n</li>\n<li><p>Duration</p>\n</li>\n</ul>\n<h3 id=\"Type-Annotations\"><a href=\"#Type-Annotations\" class=\"headerlink\" title=\"Type Annotations\"></a>Type Annotations</h3><ul>\n<li>repeating annotation</li>\n</ul>\n"},{"title":"Use CSS to implement the mobile navigation layout","date":"2015-08-23T09:01:18.000Z","_content":"\n### Requirement\n\nWhen doing development for HTML which can adapt to mobile/pad, we need to have a way to let user access the web content easily, below is one of the most common UX design:\n\n1. There is a menu icon to open the navigation menu\n2. When click on the navigation menu item, the corresponding panel page will be loaded\n\n### Implementation\n\n* HTML\n\n\tIt's very comprehensive, _i_ is the menu icon, _navigator_ is the navigation bar, _panel_ is the content page\n\n\t``` html\n<body>\n\n  <i class=\"menu fa fa-bars\"></i>\n\n  <div class=\"navigator\">\n    <ul>\n      <li>\n        <a href=\"#panel_1\">Panel 1</a>\n      </li>\n      <li>\n        <a href=\"#panel_2\">Panel 2</a>\n      </li>\n      <li>\n        <a href=\"#panel_3\">Panel 3</a>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"container\">\n\n    <div class=\"panel\" id=\"panel_1\">\n      <h1>This is Panel 1</h1>\n    </div>\n\n    <div class=\"panel\" id=\"panel_2\">\n      <h1>This is Panel 2</h1>\n    </div>\n\n    <div class=\"panel\" id=\"panel_3\">\n      <h1>This is Panel 3</h1>\n    </div>\n  </div>\n\n</body>\n\n\t```\n\n* CSS\n\n\t``` css\n* {\n  margin: 0;\n  padding: 0;\n}\n\n.menu {\n  display: block;\n  position: absolute;\n  top: 40px;\n  right: 20px;\n}\n\n.showNavigator .navigator {\n  left: 0px;\n}\n\n.navigator {\n  position: absolute;\n  width: 150px;\n  left: -150px;\n  background: lightgrey;\n  z-index: 100;\n  transition: all .5s ease;\n}\n\n.navigator li {\n  line-height: 30px;\n  padding: 3px 10px;\n  border-top: solid 1px;\n  text-align: center;\n}\n\n.navigator li:first-child {\n  border-top: none;\n}\n\n.navigator li:hover {\n  background: lightblue;\n}\n\n.navigator ul a {\n  text-decoration: none;\n}\n\n.container {\n  width: 100%;\n  left: 0px;\n  position: relative;\n  transition: all .5s ease;\n}\n\n.container .panel {\n  position: absolute;\n  background: lightblue;\n  width: 100%;\n  left: -100%;\n  transition: all .5s ease;\n}\n\n.container .panel:target {\n  left: 0px;\n}\t\t\n\t```\n\n* JS\n\n\t``` javascript\n$(document).ready(function() {\n  \n  $('.menu').bind('click', function () {\n    $('body').toggleClass('showNavigator');  \n  });\n  \n  $('.navigator a').bind('click', function () {\n    $('body').toggleClass('showNavigator');  \n  })\n  \n});\n\t```\n### Demo\n\n[Plunker demo](http://embed.plnkr.co/3ff8RgZ6LWZAE4Ktl3V4/preview)\n","source":"_posts/2015-08-23-css-implement-mobile-layout.md","raw":"title: Use CSS to implement the mobile navigation layout\ndate: 2015-08-23 17:01:18\ntags: [css,mobile]\n---\n\n### Requirement\n\nWhen doing development for HTML which can adapt to mobile/pad, we need to have a way to let user access the web content easily, below is one of the most common UX design:\n\n1. There is a menu icon to open the navigation menu\n2. When click on the navigation menu item, the corresponding panel page will be loaded\n\n### Implementation\n\n* HTML\n\n\tIt's very comprehensive, _i_ is the menu icon, _navigator_ is the navigation bar, _panel_ is the content page\n\n\t``` html\n<body>\n\n  <i class=\"menu fa fa-bars\"></i>\n\n  <div class=\"navigator\">\n    <ul>\n      <li>\n        <a href=\"#panel_1\">Panel 1</a>\n      </li>\n      <li>\n        <a href=\"#panel_2\">Panel 2</a>\n      </li>\n      <li>\n        <a href=\"#panel_3\">Panel 3</a>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"container\">\n\n    <div class=\"panel\" id=\"panel_1\">\n      <h1>This is Panel 1</h1>\n    </div>\n\n    <div class=\"panel\" id=\"panel_2\">\n      <h1>This is Panel 2</h1>\n    </div>\n\n    <div class=\"panel\" id=\"panel_3\">\n      <h1>This is Panel 3</h1>\n    </div>\n  </div>\n\n</body>\n\n\t```\n\n* CSS\n\n\t``` css\n* {\n  margin: 0;\n  padding: 0;\n}\n\n.menu {\n  display: block;\n  position: absolute;\n  top: 40px;\n  right: 20px;\n}\n\n.showNavigator .navigator {\n  left: 0px;\n}\n\n.navigator {\n  position: absolute;\n  width: 150px;\n  left: -150px;\n  background: lightgrey;\n  z-index: 100;\n  transition: all .5s ease;\n}\n\n.navigator li {\n  line-height: 30px;\n  padding: 3px 10px;\n  border-top: solid 1px;\n  text-align: center;\n}\n\n.navigator li:first-child {\n  border-top: none;\n}\n\n.navigator li:hover {\n  background: lightblue;\n}\n\n.navigator ul a {\n  text-decoration: none;\n}\n\n.container {\n  width: 100%;\n  left: 0px;\n  position: relative;\n  transition: all .5s ease;\n}\n\n.container .panel {\n  position: absolute;\n  background: lightblue;\n  width: 100%;\n  left: -100%;\n  transition: all .5s ease;\n}\n\n.container .panel:target {\n  left: 0px;\n}\t\t\n\t```\n\n* JS\n\n\t``` javascript\n$(document).ready(function() {\n  \n  $('.menu').bind('click', function () {\n    $('body').toggleClass('showNavigator');  \n  });\n  \n  $('.navigator a').bind('click', function () {\n    $('body').toggleClass('showNavigator');  \n  })\n  \n});\n\t```\n### Demo\n\n[Plunker demo](http://embed.plnkr.co/3ff8RgZ6LWZAE4Ktl3V4/preview)\n","slug":"css-implement-mobile-layout","published":1,"updated":"2015-08-23T09:30:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8fzloc80002vm1veho3p6ec","content":"<h3 id=\"Requirement\"><a href=\"#Requirement\" class=\"headerlink\" title=\"Requirement\"></a>Requirement</h3><p>When doing development for HTML which can adapt to mobile/pad, we need to have a way to let user access the web content easily, below is one of the most common UX design:</p>\n<ol>\n<li>There is a menu icon to open the navigation menu</li>\n<li>When click on the navigation menu item, the corresponding panel page will be loaded</li>\n</ol>\n<h3 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h3><ul>\n<li><p>HTML</p>\n<p>  It’s very comprehensive, <em>i</em> is the menu icon, <em>navigator</em> is the navigation bar, <em>panel</em> is the content page</p>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu fa fa-bars\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navigator\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#panel_1\"</span>&gt;</span>Panel 1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#panel_2\"</span>&gt;</span>Panel 2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#panel_3\"</span>&gt;</span>Panel 3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"panel_1\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>This is Panel 1<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"panel_2\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>This is Panel 2<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"panel_3\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>This is Panel 3<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>CSS</p>\n  <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\">* &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: block;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">40px</span>;</div><div class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">20px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.showNavigator</span> <span class=\"selector-class\">.navigator</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">150px</span>;</div><div class=\"line\">  <span class=\"attribute\">background</span>: lightgrey;</div><div class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">100</span>;</div><div class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> <span class=\"selector-tag\">li</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span> <span class=\"number\">10px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>: solid <span class=\"number\">1px</span>;</div><div class=\"line\">  <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first-child</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background</span>: lightblue;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">a</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.container</span> <span class=\"selector-class\">.panel</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">background</span>: lightblue;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.container</span> <span class=\"selector-class\">.panel</span><span class=\"selector-pseudo\">:target</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>JS</p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  $(<span class=\"string\">'.menu'</span>).bind(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'body'</span>).toggleClass(<span class=\"string\">'showNavigator'</span>);  </div><div class=\"line\">  &#125;);</div><div class=\"line\">  </div><div class=\"line\">  $(<span class=\"string\">'.navigator a'</span>).bind(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'body'</span>).toggleClass(<span class=\"string\">'showNavigator'</span>);  </div><div class=\"line\">  &#125;)</div><div class=\"line\">  </div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><p><a href=\"http://embed.plnkr.co/3ff8RgZ6LWZAE4Ktl3V4/preview\" target=\"_blank\" rel=\"external\">Plunker demo</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Requirement\"><a href=\"#Requirement\" class=\"headerlink\" title=\"Requirement\"></a>Requirement</h3><p>When doing development for HTML which can adapt to mobile/pad, we need to have a way to let user access the web content easily, below is one of the most common UX design:</p>\n<ol>\n<li>There is a menu icon to open the navigation menu</li>\n<li>When click on the navigation menu item, the corresponding panel page will be loaded</li>\n</ol>\n<h3 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h3><ul>\n<li><p>HTML</p>\n<p>  It’s very comprehensive, <em>i</em> is the menu icon, <em>navigator</em> is the navigation bar, <em>panel</em> is the content page</p>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu fa fa-bars\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navigator\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#panel_1\"</span>&gt;</span>Panel 1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#panel_2\"</span>&gt;</span>Panel 2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#panel_3\"</span>&gt;</span>Panel 3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"panel_1\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>This is Panel 1<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"panel_2\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>This is Panel 2<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"panel_3\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>This is Panel 3<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>CSS</p>\n  <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\">* &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: block;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">40px</span>;</div><div class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">20px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.showNavigator</span> <span class=\"selector-class\">.navigator</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">150px</span>;</div><div class=\"line\">  <span class=\"attribute\">background</span>: lightgrey;</div><div class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">100</span>;</div><div class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> <span class=\"selector-tag\">li</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span> <span class=\"number\">10px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>: solid <span class=\"number\">1px</span>;</div><div class=\"line\">  <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first-child</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background</span>: lightblue;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.navigator</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">a</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.container</span> <span class=\"selector-class\">.panel</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">background</span>: lightblue;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.container</span> <span class=\"selector-class\">.panel</span><span class=\"selector-pseudo\">:target</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>JS</p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  $(<span class=\"string\">'.menu'</span>).bind(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'body'</span>).toggleClass(<span class=\"string\">'showNavigator'</span>);  </div><div class=\"line\">  &#125;);</div><div class=\"line\">  </div><div class=\"line\">  $(<span class=\"string\">'.navigator a'</span>).bind(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'body'</span>).toggleClass(<span class=\"string\">'showNavigator'</span>);  </div><div class=\"line\">  &#125;)</div><div class=\"line\">  </div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><p><a href=\"http://embed.plnkr.co/3ff8RgZ6LWZAE4Ktl3V4/preview\" target=\"_blank\" rel=\"external\">Plunker demo</a></p>\n"},{"title":"HTML5 打牌计分器","date":"2015-08-22T04:14:46.000Z","_content":"\n<div style=\"background:lightcoral; text-align: center; \"><a style=\"font-family: Helvetica Neue, Helvetica, Arial;font-weight: 300; color:white; font-size: large;\" \nhref=\"http://bigtwo.duapp.com\" target=\"_blank\" rel=\"external\">点击打开</a>\n</div>\n\n\n### 它是什么\n\n这是一个打牌的计分器，用户可以在每一盘结束后输入每人当前剩余的牌数，它会自动统计每人的得分状态。\n\n以下是一些截图\n\n![添加纪录](app_1.png) ![删除记录](app_2.png)\n\n### 怎样使用\n\n#### 更改玩家的名字： \n\n* 点击左上角的图标，玩家的名字就会变成可编辑的状态\n* 更改玩家的名字\n* 再次点击左上角的图标，完成编辑\n\n#### 输入每一盘的结果\n\n* 点击“添加记录”， 输入框会自动展开，通过数字按键输入对应玩家的剩余牌数\n* 通过点击来移动光标\n* 只有在当前输入行有效(1.所有玩家已经录入 2.有一个录入为0存在)的时候，确定按纽才会生效，通过点击“确定”增加当前记录\n* 点击“取消”会取消整行的输入并返回。\n\n#### 删除记录\n\n* 在记录行上向左划动，会出现“删除”按纽，点击则可以删除记录\n* 假如不想删除，向右划动，“删除”按纽会消失\n\n### 技术细节\n\n* 主要用Angularjs实现，手写的CSS实现页面布局，还有一些CSS3的动画效果\n* node.js＋express作为静态服务器, 部署在百度云的app engine上 \n\n\n","source":"_posts/2015-08-22-big-two-scoring.md","raw":"title: HTML5 打牌计分器\ndate: 2015-08-22 12:14:46\ntags: [html5,angular,css]\n---\n\n<div style=\"background:lightcoral; text-align: center; \"><a style=\"font-family: Helvetica Neue, Helvetica, Arial;font-weight: 300; color:white; font-size: large;\" \nhref=\"http://bigtwo.duapp.com\" target=\"_blank\" rel=\"external\">点击打开</a>\n</div>\n\n\n### 它是什么\n\n这是一个打牌的计分器，用户可以在每一盘结束后输入每人当前剩余的牌数，它会自动统计每人的得分状态。\n\n以下是一些截图\n\n![添加纪录](app_1.png) ![删除记录](app_2.png)\n\n### 怎样使用\n\n#### 更改玩家的名字： \n\n* 点击左上角的图标，玩家的名字就会变成可编辑的状态\n* 更改玩家的名字\n* 再次点击左上角的图标，完成编辑\n\n#### 输入每一盘的结果\n\n* 点击“添加记录”， 输入框会自动展开，通过数字按键输入对应玩家的剩余牌数\n* 通过点击来移动光标\n* 只有在当前输入行有效(1.所有玩家已经录入 2.有一个录入为0存在)的时候，确定按纽才会生效，通过点击“确定”增加当前记录\n* 点击“取消”会取消整行的输入并返回。\n\n#### 删除记录\n\n* 在记录行上向左划动，会出现“删除”按纽，点击则可以删除记录\n* 假如不想删除，向右划动，“删除”按纽会消失\n\n### 技术细节\n\n* 主要用Angularjs实现，手写的CSS实现页面布局，还有一些CSS3的动画效果\n* node.js＋express作为静态服务器, 部署在百度云的app engine上 \n\n\n","slug":"big-two-scoring","published":1,"updated":"2015-08-22T06:38:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8fzlocf0004vm1vk1jf8szf","content":"<div style=\"background:lightcoral; text-align: center; \"><a style=\"font-family: Helvetica Neue, Helvetica, Arial;font-weight: 300; color:white; font-size: large;\" href=\"http://bigtwo.duapp.com\" target=\"_blank\" rel=\"external\">点击打开</a><br></div>\n\n\n<h3 id=\"它是什么\"><a href=\"#它是什么\" class=\"headerlink\" title=\"它是什么\"></a>它是什么</h3><p>这是一个打牌的计分器，用户可以在每一盘结束后输入每人当前剩余的牌数，它会自动统计每人的得分状态。</p>\n<p>以下是一些截图</p>\n<p><img src=\"app_1.png\" alt=\"添加纪录\"> <img src=\"app_2.png\" alt=\"删除记录\"></p>\n<h3 id=\"怎样使用\"><a href=\"#怎样使用\" class=\"headerlink\" title=\"怎样使用\"></a>怎样使用</h3><h4 id=\"更改玩家的名字：\"><a href=\"#更改玩家的名字：\" class=\"headerlink\" title=\"更改玩家的名字：\"></a>更改玩家的名字：</h4><ul>\n<li>点击左上角的图标，玩家的名字就会变成可编辑的状态</li>\n<li>更改玩家的名字</li>\n<li>再次点击左上角的图标，完成编辑</li>\n</ul>\n<h4 id=\"输入每一盘的结果\"><a href=\"#输入每一盘的结果\" class=\"headerlink\" title=\"输入每一盘的结果\"></a>输入每一盘的结果</h4><ul>\n<li>点击“添加记录”， 输入框会自动展开，通过数字按键输入对应玩家的剩余牌数</li>\n<li>通过点击来移动光标</li>\n<li>只有在当前输入行有效(1.所有玩家已经录入 2.有一个录入为0存在)的时候，确定按纽才会生效，通过点击“确定”增加当前记录</li>\n<li>点击“取消”会取消整行的输入并返回。</li>\n</ul>\n<h4 id=\"删除记录\"><a href=\"#删除记录\" class=\"headerlink\" title=\"删除记录\"></a>删除记录</h4><ul>\n<li>在记录行上向左划动，会出现“删除”按纽，点击则可以删除记录</li>\n<li>假如不想删除，向右划动，“删除”按纽会消失</li>\n</ul>\n<h3 id=\"技术细节\"><a href=\"#技术细节\" class=\"headerlink\" title=\"技术细节\"></a>技术细节</h3><ul>\n<li>主要用Angularjs实现，手写的CSS实现页面布局，还有一些CSS3的动画效果</li>\n<li>node.js＋express作为静态服务器, 部署在百度云的app engine上 </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<div style=\"background:lightcoral; text-align: center; \"><a style=\"font-family: Helvetica Neue, Helvetica, Arial;font-weight: 300; color:white; font-size: large;\" href=\"http://bigtwo.duapp.com\" target=\"_blank\" rel=\"external\">点击打开</a><br></div>\n\n\n<h3 id=\"它是什么\"><a href=\"#它是什么\" class=\"headerlink\" title=\"它是什么\"></a>它是什么</h3><p>这是一个打牌的计分器，用户可以在每一盘结束后输入每人当前剩余的牌数，它会自动统计每人的得分状态。</p>\n<p>以下是一些截图</p>\n<p><img src=\"app_1.png\" alt=\"添加纪录\"> <img src=\"app_2.png\" alt=\"删除记录\"></p>\n<h3 id=\"怎样使用\"><a href=\"#怎样使用\" class=\"headerlink\" title=\"怎样使用\"></a>怎样使用</h3><h4 id=\"更改玩家的名字：\"><a href=\"#更改玩家的名字：\" class=\"headerlink\" title=\"更改玩家的名字：\"></a>更改玩家的名字：</h4><ul>\n<li>点击左上角的图标，玩家的名字就会变成可编辑的状态</li>\n<li>更改玩家的名字</li>\n<li>再次点击左上角的图标，完成编辑</li>\n</ul>\n<h4 id=\"输入每一盘的结果\"><a href=\"#输入每一盘的结果\" class=\"headerlink\" title=\"输入每一盘的结果\"></a>输入每一盘的结果</h4><ul>\n<li>点击“添加记录”， 输入框会自动展开，通过数字按键输入对应玩家的剩余牌数</li>\n<li>通过点击来移动光标</li>\n<li>只有在当前输入行有效(1.所有玩家已经录入 2.有一个录入为0存在)的时候，确定按纽才会生效，通过点击“确定”增加当前记录</li>\n<li>点击“取消”会取消整行的输入并返回。</li>\n</ul>\n<h4 id=\"删除记录\"><a href=\"#删除记录\" class=\"headerlink\" title=\"删除记录\"></a>删除记录</h4><ul>\n<li>在记录行上向左划动，会出现“删除”按纽，点击则可以删除记录</li>\n<li>假如不想删除，向右划动，“删除”按纽会消失</li>\n</ul>\n<h3 id=\"技术细节\"><a href=\"#技术细节\" class=\"headerlink\" title=\"技术细节\"></a>技术细节</h3><ul>\n<li>主要用Angularjs实现，手写的CSS实现页面布局，还有一些CSS3的动画效果</li>\n<li>node.js＋express作为静态服务器, 部署在百度云的app engine上 </li>\n</ul>\n"},{"title":"Shell Function return string","date":"2015-08-30T13:46:33.000Z","_content":"\nBelow example work, but performance may be an issue as it spawn a subprocess\n\n``` bash\n\n#!/bin/bash\n\nfunction functionReturnStringValue() {\n\techo \"HIHI $1 $2\"\n}\n\nPARAM1=\"OTHER\"\nRESULT=$(functionReturnStringValue $PARAM1 \"PARAM2\")\n\necho $RESULT\n\n\n```\n\nit return \n\n``` bash\n\nlujunjie@mac:~/code/tempDir/shell_study > ./run.sh \nHIHI OTHER PARAM2\n\n```","source":"_posts/2015-08-30-function-return-string-in-shell.md","raw":"title: Shell Function return string \ndate: 2015-08-30 21:46:33\ntags: [shell]\n---\n\nBelow example work, but performance may be an issue as it spawn a subprocess\n\n``` bash\n\n#!/bin/bash\n\nfunction functionReturnStringValue() {\n\techo \"HIHI $1 $2\"\n}\n\nPARAM1=\"OTHER\"\nRESULT=$(functionReturnStringValue $PARAM1 \"PARAM2\")\n\necho $RESULT\n\n\n```\n\nit return \n\n``` bash\n\nlujunjie@mac:~/code/tempDir/shell_study > ./run.sh \nHIHI OTHER PARAM2\n\n```","slug":"function-return-string-in-shell","published":1,"updated":"2015-08-30T14:00:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8fzlocj0005vm1vlnkpgps8","content":"<p>Below example work, but performance may be an issue as it spawn a subprocess</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">functionReturnStringValue</span></span>() &#123;</div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"HIHI <span class=\"variable\">$1</span> <span class=\"variable\">$2</span>\"</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">PARAM1=<span class=\"string\">\"OTHER\"</span></div><div class=\"line\">RESULT=$(functionReturnStringValue <span class=\"variable\">$PARAM1</span> <span class=\"string\">\"PARAM2\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$RESULT</span></div></pre></td></tr></table></figure>\n<p>it return </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">lujunjie@mac:~/code/tempDir/shell_study &gt; ./run.sh </div><div class=\"line\">HIHI OTHER PARAM2</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>Below example work, but performance may be an issue as it spawn a subprocess</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">functionReturnStringValue</span></span>() &#123;</div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"HIHI <span class=\"variable\">$1</span> <span class=\"variable\">$2</span>\"</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">PARAM1=<span class=\"string\">\"OTHER\"</span></div><div class=\"line\">RESULT=$(functionReturnStringValue <span class=\"variable\">$PARAM1</span> <span class=\"string\">\"PARAM2\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$RESULT</span></div></pre></td></tr></table></figure>\n<p>it return </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">lujunjie@mac:~/code/tempDir/shell_study &gt; ./run.sh </div><div class=\"line\">HIHI OTHER PARAM2</div></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/2015-08-22-big-two-scoring/app_1.png","post":"cj8fzlocf0004vm1vk1jf8szf","slug":"app_1.png","modified":1,"renderable":1},{"_id":"source/_posts/2015-08-22-big-two-scoring/app_2.png","post":"cj8fzlocf0004vm1vk1jf8szf","slug":"app_2.png","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[{"post_id":"cj8fzloc00000vm1vp3od15ol","tag_id":"cj8fzlocc0003vm1vj9ku671e","_id":"cj8fzlocm0007vm1vdg2m67ke"},{"post_id":"cj8fzloc80002vm1veho3p6ec","tag_id":"cj8fzlocl0006vm1vcia6ui9s","_id":"cj8fzloco000avm1v91tpnvns"},{"post_id":"cj8fzloc80002vm1veho3p6ec","tag_id":"cj8fzlocn0008vm1vjncmd3io","_id":"cj8fzloco000bvm1vgxiqq5ip"},{"post_id":"cj8fzlocf0004vm1vk1jf8szf","tag_id":"cj8fzlocn0009vm1vklg0hi1u","_id":"cj8fzlocs000fvm1vyu838y1j"},{"post_id":"cj8fzlocf0004vm1vk1jf8szf","tag_id":"cj8fzloco000cvm1vgw47o3aj","_id":"cj8fzlocs000gvm1vygbuuk9k"},{"post_id":"cj8fzlocf0004vm1vk1jf8szf","tag_id":"cj8fzlocl0006vm1vcia6ui9s","_id":"cj8fzlocs000hvm1vmz6w0o0o"},{"post_id":"cj8fzlocj0005vm1vlnkpgps8","tag_id":"cj8fzlocr000evm1vdefhb93t","_id":"cj8fzlocs000ivm1v23tjvpd1"}],"Tag":[{"name":"java","_id":"cj8fzlocc0003vm1vj9ku671e"},{"name":"css","_id":"cj8fzlocl0006vm1vcia6ui9s"},{"name":"mobile","_id":"cj8fzlocn0008vm1vjncmd3io"},{"name":"html5","_id":"cj8fzlocn0009vm1vklg0hi1u"},{"name":"angular","_id":"cj8fzloco000cvm1vgw47o3aj"},{"name":"shell","_id":"cj8fzlocr000evm1vdefhb93t"}]}}